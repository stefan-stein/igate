% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report.R
\name{report}
\alias{report}
\title{Generates report about a conducted gbpca.}
\usage{
report(df, versus = 8, target = "Sepal.Length", test = "w",
  ssv = NULL, outlier_removal_target = TRUE,
  outlier_removal_ssv = TRUE, good_end = "low",
  results_path = "resultsIris", validation = FALSE,
  validation_path = "validatedObsIris",
  validation_counts = "validationCountsIris")
}
\arguments{
\item{df}{The data frame that was analysed with \code{\link{gbpca}} or \code{\link{categorical.gbpca}}.}

\item{versus}{What value of \code{versus} was used?}

\item{target}{What \code{target} was used?}

\item{test}{Which hypothesis test was used alongside the counting method?}

\item{ssv}{Which \code{ssv} have been used in the analysis? If \code{NULL}, it
will be assumed that \code{ssv = NULL} was passed to \code{\link{gbpca}} or \code{\link{categorical.gbpca}}
and all numeric variables in \code{df} will be used.}

\item{outlier_removal_target}{Was outlier removal conducted for \code{target}?}

\item{outlier_removal_ssv}{Was outlier removal conducted for each \code{ssv}?}

\item{good_end}{Are \code{"low"} or \code{"high"} values of \code{target} good?}

\item{results_path}{Filepath to a .csv file containing results of \code{\link{gbpca}} or \code{\link{categorical.gbpca}}.}

\item{validation}{Logical. Has validation of the results been performed?}

\item{validation_path}{Filepath to a .csv file containing the results validation.}

\item{validation_counts}{Filepath to a .csv file containing the counts from validation.}
}
\description{
Takes results from a previous gbpca and automatically generates a html report
for it.
}
\examples{
## If you want to create a new gbpca from scratch, this is the last step
## and relies on executing the other functions in this package first.
## Run gbpca
results <- gbpca(iris, target = "Sepal.Length")
## Produce regression plots
gbpca.regressions(iris, target = "Sepal.Length")
## Validate findings and store results
x <- validate(iris, target = "Sepal.Length", causes = results$Causes, results_df = results)
## Split above results
validatedObs <- as.data.frame(x[1])
validationCounts <- as.data.frame(x[2])
## Create report
report(df = iris, target = "Sepal.Length", results_path = "results",
validation = TRUE, validation_path = "validatedObs", validation_counts = "validationCounts")

}
